# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-01 08:26
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('lat', models.FloatField(null=True)),
                ('lon', models.FloatField(null=True)),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='BotMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True)),
                ('type', models.CharField(default='', max_length=255)),
                ('disable_notification', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Сообщение бота',
                'verbose_name_plural': 'Сообщения бота',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
                ('category', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='MessageButton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('inline', models.BooleanField(default=False)),
                ('data', models.CharField(blank=True, max_length=65, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('next_state', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Кнопка Сообщений',
                'verbose_name_plural': 'Кнопки Сообщений',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent', models.BooleanField(default=False)),
                ('property_json', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='OrderType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TelegramFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.FileField(null=True, upload_to='uploads/%Y/%m/%d/')),
                ('file_type', models.CharField(default='photo', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('username', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('botmessage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bot.BotMessage')),
                ('name', models.CharField(max_length=255)),
                ('translate', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Транслитерация')),
            ],
            bases=('bot.botmessage',),
        ),
        migrations.AddField(
            model_name='order',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.OrderType'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.TelegramUser'),
        ),
        migrations.AddField(
            model_name='company',
            name='photo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_photo', to='bot.TelegramFile'),
        ),
        migrations.AddField(
            model_name='botmessage',
            name='buttons',
            field=models.ManyToManyField(to='bot.MessageButton'),
        ),
        migrations.AddField(
            model_name='botmessage',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message_file', to='bot.TelegramFile'),
        ),
        migrations.AddField(
            model_name='address',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.Company'),
        ),
        migrations.AddField(
            model_name='ordertype',
            name='questions',
            field=models.ManyToManyField(to='bot.Question'),
        ),
    ]
